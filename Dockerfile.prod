# build env
# FROM node:16-alpine AS builder
# WORKDIR /app
# COPY package.json .
# COPY package-lock.json .
# COPY yarn.lock .
# RUN yarn install
# COPY . .
# CMD ["yarn", "build"]

# # production environment
# FROM nginx:stable-alpine
# COPY --from=build-stage /app/build/ /usr/share/nginx/html
# EXPOSE 80 443
# CMD ["nginx", "-g", "daemon off;"]



# Name the node stage "builder"
FROM node:16-alpine AS builder
# Set working directory
WORKDIR /app
# Copy all files from current directory to working dir in image
COPY . .
# install node modules and build assets
RUN yarn install && yarn build

# nginx state for serving content
FROM nginx:stable-alpine
# Remove default nginx static assets
RUN rm -rf /usr/share/nginx/html/*
# Copy static assets from builder stage
COPY --from=builder /app/default.conf /etc/nginx/conf.d/default.conf
COPY --from=builder /app/build /usr/share/nginx/html
EXPOSE 80 443
# Containers run nginx with global directives and daemon off
ENTRYPOINT ["nginx", "-g", "daemon off;"]